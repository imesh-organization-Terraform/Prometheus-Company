apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
  namespace: default

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-state-metrics
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  - services
  - replicationcontrollers
  - replicasets
  - deployments
  - statefulsets
  - daemonsets
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics
roleRef:
  kind: ClusterRole
  name: kube-state-metrics
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
  namespace: default
  
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: default
spec:
  selector:
    matchLabels:
      app: kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      serviceAccountName: kube-state-metrics
      containers:
      - name: kube-state-metrics
        image: k8s.gcr.io/kube-state-metrics/kube-state-metrics:v2.3.0
        ports:
        - containerPort: 8080
        resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
              
---

apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics
  namespace: default
spec:
  selector:
    app: kube-state-metrics
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
