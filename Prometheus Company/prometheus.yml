apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 5s 
      evaluation_interval: 5s

    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https    

      - job_name: 'kubernetes-nodes'
        scheme: http
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_label_pod_label]
          action: replace
          regex: node-exporter
          target_label: pod_label

      - job_name: 'kubernetes-endpoints'
        metrics_path: /metrics
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_port_name]
          action: keep
          regex: default;.*;.*
        - source_labels: [__meta_kubernetes_endpoints_label_endpoint_label]
          action: replace
          regex: (.*)
          target_label: endpoint_label

      - job_name: 'kubernetes-services'
        metrics_path: /metrics
        kubernetes_sd_configs:
        - role: service
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_port_name]
          action: keep
          regex: default;.*;.*
        - source_labels: [__meta_kubernetes_service_label_service_label]
          action: replace
          regex: (.*)
          target_label: service_label

      - job_name: 'kubernetes-pods'
        metrics_path: /metrics
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: keep
            regex: '.*'
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: default

      - job_name: 'kube-state-metric'
        metrics_path: /metrics
        scheme: http
        kubernetes_sd_configs:
        - role: service
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_label_kube_state_metrics]
          action: keep
          regex: true

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - endpoints
      - services
      - pods
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: default

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.41.0
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --web.enable-lifecycle
        ports:
        - containerPort: 9090
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: storage
          mountPath: /prometheus
      volumes:
        - name: config
          configMap:
            name: prometheus-server-config
        - name: storage
          emptyDir: {}
             
      #   volumeMounts:
      #   - name: prometheus-server-config
      #     mountPath: /etc/prometheus/
      #     readOnly: true
      # volumes:
      # - name: prometheus-server-config
      #   configMap:
      #     name: prometheus-server-config

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - name: web
    port: 9090
    targetPort: 9090
  type: ClusterIP